name: Release Obsidian plugin

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'  # TODO: change back to 'yarn' when git dependency is fixed

      - name: Install dependencies
        run: npm ci  # TODO: change back to 'yarn install --frozen-lockfile' when git dependency is fixed

      - name: Validate version consistency
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          MANIFEST_VERSION=$(node -p "require('./manifest.json').version")
          TAG_VERSION="${GITHUB_REF#refs/tags/}"
          
          echo "Package version: $PACKAGE_VERSION"
          echo "Manifest version: $MANIFEST_VERSION"
          echo "Tag version: $TAG_VERSION"
          
          if [ "$PACKAGE_VERSION" != "$MANIFEST_VERSION" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) doesn't match manifest version ($MANIFEST_VERSION)"
            exit 1
          fi
          
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) doesn't match tag version ($TAG_VERSION)"
            exit 1
          fi

      - name: Check TypeScript types
        run: npm run check-types
        continue-on-error: true  # External dependency type issues

      - name: Build plugin
        run: npm run build

      - name: Verify build artifacts
        run: |
          if [ ! -f "main.js" ]; then
            echo "Error: main.js not found!"
            exit 1
          fi
          if [ ! -f "manifest.json" ]; then
            echo "Error: manifest.json not found!"
            exit 1
          fi
          if [ ! -f "styles.css" ]; then
            echo "Error: styles.css not found!"
            exit 1
          fi
          
          # Check file sizes
          MAIN_SIZE=$(stat -c%s "main.js")
          if [ "$MAIN_SIZE" -lt 1000 ]; then
            echo "Error: main.js seems too small ($MAIN_SIZE bytes)"
            exit 1
          fi
          
          echo "Build artifacts verified successfully"
          echo "main.js size: $MAIN_SIZE bytes"

      - name: Generate release notes
        run: |
          if [ ! -f "release-notes.md" ] || [ ! -s "release-notes.md" ]; then
            echo "Generating release notes from recent commits..."
            echo "# Release ${GITHUB_REF#refs/tags/}" > release-notes.md
            echo "" >> release-notes.md
            echo "## Changes" >> release-notes.md
            git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --oneline >> release-notes.md || true
          fi

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${GITHUB_REF#refs/tags/}"

          gh release create "$tag" \
            --title="$tag" \
            --notes-file="release-notes.md" \
            main.js manifest.json styles.css

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            main.js
            manifest.json
            styles.css
          retention-days: 30
